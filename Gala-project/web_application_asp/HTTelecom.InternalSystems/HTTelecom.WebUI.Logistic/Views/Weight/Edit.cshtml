@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_LayoutMain.cshtml";
    ViewBag.SideBarMenu = "Weight";
}
@{
    ViewBag.TabIsActive = "tabone";
    if (Request["tabActive"] != null)
    {
        ViewBag.TabIsActive = Request["tabActive"];
    }
}

@using HTTelecom.Domain.Core.DataContext.lps
@model HTTelecom.Domain.Core.DataContext.ams.Weight

<!-- Page Header -->
<div class="page-header page-header-block">
    <div class="page-header-section">
        <h4 class="title semibold">GALAGALA Media - Weight</h4>
    </div>
    <div class="page-header-section">
        <!-- Toolbar -->
        <div class="toolbar">
            <ol class="breadcrumb breadcrumb-transparent nm">
                <li><i class="fa fa-home"></i>&nbsp;<a href="@Url.Action("Index","Home")">Home</a></li>
                <li><i class="fa fa-shopping-cart"></i>&nbsp;<a href="@Url.Action("WeightIndex", "MSS")">Weight</a></li>
                <li class="active">Edit Weight</li>
            </ol>

        </div>
        <!--/ Toolbar -->
    </div>
</div>

@if (TempData["ResponseMessage"] != null)
{
    if ((int)TempData["ResponseMessage"] == 1)
    {
        <div class="alert alert-success">
            <a href="#" class="close" data-dismiss="alert">&times;</a>
            <strong>Success!</strong> Your operation has been done successfully.
        </div>
    }
}
@if (ViewData.ModelState.Where(a => a.Value.Errors.Count > 0).ToList().Count > 0)
{
    <div class="alert alert-danger">
        @Html.ValidationSummary(false)
    </div>
}

<!-- Page Body -->
@using (Html.BeginForm("Edit", "Weight", FormMethod.Post))
{
    <div class="row">
        <div class="col-md-12">
            <div class="panel panel-blue">
                <!-- panel heading/header -->
                <div class="panel-heading">
                    <div class="panel-toolbar">
                        <ul class="nav nav-tabs pull-left">
                            <li class="@(ViewBag.TabIsActive == "tabone" ? "active":"")"><a href="#tab_one" data-toggle="tab">Weight Info</a></li>                          
                        </ul>
                        <div class="text-right">
                            <button type="submit" class="btn ladda-button btn-success" data-style="zoom-in"><span class="ladda-label">Save & Exit</span></button>
                            <button type="submit" class="btn ladda-button btn-warning" id="saveType" name="saveType" value="1" data-style="zoom-in"><span class="ladda-label">Save & Continue</span></button>
                        </div>
                    </div>
                </div>
                <!--/ panel heading/header -->
                <!-- panel body -->
                <div class="panel-body">
                    <!-- tab content -->
                    <div class="tab-content">
                        <!-- -------------Weight Info------------- -->
                        <div class="tab-pane @(ViewBag.TabIsActive == "tabone" ? "active":"")" id="tab_one">
                            <form class="form-horizontal">
                                <fieldset>
                                    <div class="row">
                                        <div class="col-sm-6">
                                            <div class="form-group">
                                                @Html.HiddenFor(model => model.WeightId, new { @class = "form-control", value = @Model.WeightId })
                                                <label>Price</label>
                                                <div class="input-group">
                                                   @Html.TextBoxFor(model => model.Price, new { @class = "form-control", placeholder = "Price" })
                                                    <span class="input-group-addon">VNĐ</span>
                                                </div>
                                                
                                            </div>
                                        </div>
                                        <div class="col-sm-6">
                                            <div class="form-group">
                                                <label>Location Type</label>
                                                @*@Html.DropDownListFor(model => model.VendorId, new SelectList((List<HTTelecom.Domain.Core.DataContext.cis.Vendor>)ViewBag.Vendor, "VendorId", "VendorFullName"), "Select vendor...", new { @class = "form-control" })*@
                                           
                                                @Html.DropDownListFor(model => model.Type, new SelectList((List<SelectListItem>)ViewBag.Type, "Value", "Text", 2), new { @class = "form-control" ,@onchange="ChangeType()" })
                                            </div>
                                        </div>  
                                        </div>
                                    <div class="row">
                                        <div class="col-sm-6">
                                            <div class="form-group">
                                                <label>Date Limited</label>
                                                @Html.TextBoxFor(model => model.DateLimited, new { @class = "form-control", id = "ProductCode", placeholder = "Date Limited" })
                                            </div>
                                        </div>
                                        <div class="col-sm-3">
                                            <div class="form-group">
                                                <label>Province</label>
                                                @Html.DropDownList("Province", new SelectList((List<HTTelecom.Domain.Core.DataContext.ams.Province>)ViewBag.Province, "ProvinceId", "ProvinceName"), "Select Province Name...", new { @class = "form-control", @id = "Province", @onchange="selectProvince()" })
                                            </div>
                                        </div>
                                        <div class="col-sm-3">
                                            <div class="form-group">
                                                <label>District</label>
                                                @Html.DropDownList("District", new SelectList((List<HTTelecom.Domain.Core.DataContext.ams.District>)ViewBag.DistrictLoad, "DistrictId", "DistrictName"), "Select District Name...", new { @class = "form-control", @id = "District" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">                                   
                                        <div class="col-sm-6">
                                            <div class="form-group">
                                                <label>Weight From</label>
                                                @Html.TextBoxFor(model => model.WeightFrom, new { @class = "form-control", id = "WeightFrom", placeholder = "Weight From" })
                                            </div>
                                        </div>
                                        <div class="col-sm-6">
                                            <div class="form-group">
                                                <label>Weight To</label>
                                                @Html.TextBoxFor(model => model.WeightTo, new { @class = "form-control", id = "WeightTo", placeholder = "Weight To" })
                                            </div>
                                        </div>                                        
                                    </div>              
                                    <div class="row">      
                                        <div class="col-sm-4">
                                            <div class="form-group">
                                                <label for="IsDelete checkbox-custom" style="color:red">IsDeleted</label>
                                                <div class="form-control">
                                                    <span class="radio-inline custom-radio">
                                                        @Html.RadioButtonFor(model => model.IsDeleted, "true", new { @class = "form-control", id = "radDeletedTrue" })
                                                        <label for="radDeletedTrue">&nbsp;&nbsp;Yes</label>
                                                    </span>
                                                    <span class="radio-inline custom-radio">
                                                        @Html.RadioButtonFor(model => model.IsDeleted, "false", new { @class = "form-control", id = "radDeletedFalse" })
                                                        <label for="radDeletedFalse">&nbsp;&nbsp;No</label>
                                                    </span>
                                                </div>
                                            </div>
                                        </div> 
                                    </div>
                          
                                </fieldset>
                            </form>
                        </div>
                        <!--/ Weight Add quantity -->
                   
                    </div>
                    <!--/ tab content -->
                </div>
                <!--/ panel body -->
            </div>
            <!--/ panel -->
        </div>
    </div>
   
}
<!--/ END Page Body -->


<script type="text/javascript">
    //load Json district nad province
    @{
        HTTelecom.Domain.Core.Repository.ams.DistrictRepository _iDistrictService = new HTTelecom.Domain.Core.Repository.ams.DistrictRepository();
        //convert view bag thành Json
        var list_District = (from obj in (List<HTTelecom.Domain.Core.DataContext.ams.District>)ViewBag.District select new { DistrictId = obj.DistrictId, DistrictName = obj.Type + " " + obj.DistrictName, ProvinceId = obj.ProvinceId });
        var list_Province = (from obj in (List<HTTelecom.Domain.Core.DataContext.ams.Province>)ViewBag.Province select new { ProvinceId = obj.ProvinceId, ProvinceName = obj.Type + " " + obj.ProvinceName });

    }

    var list_District = JSON.parse('@Html.Raw(Json.Encode(list_District))');
    var list_Province = JSON.parse('@Html.Raw(Json.Encode(list_Province))');
    //load
    $("#Type").val('@Model.Type');
    ChangeType();//load đầu tiên khi load trang
    //load taget
    if ($("#Type").val() == 1) {
        var tmpId = 0;
        $.each(list_District, function (key, val) {
            if (val.DistrictId == '@Model.TargetId')
            {
                tmpId = val.ProvinceId;
                return false;
            }
        });
        $("#Province").val(tmpId);
        $("#District").val('@Model.TargetId');

    }
    else {

        $("#Province").val('@Model.TargetId');
        selectProvince();
    }


    //end load
    function ChangeType() {
        var TypeValue = $("#Type").val();
        if (TypeValue == 1) {
            $("#District").show();
            $("#Province").show();
        }
        else {
            $("#District").hide();
            $("#Province").show();
        }
    }
    function selectProvince() {
        var ProvinceId = $("#Province").val();
        $('#District').find('option').remove();
        $.each(list_District, function (key, val) {
            // alert(val);
            if (val.ProvinceId == ProvinceId)
                $('#District').append('<option value="' + val.DistrictId + '">' + val.DistrictName + '</option>');
        });
    }
    $(function () {
        // Ladda button
        // ================================
        Ladda.bind('.btn.ladda-button', { timeout: 50000 });

        // Bind progress buttons and simulate loading progress
        Ladda.bind('.btn.ladda-button.ladda-progress', {
            callback: function (instance) {
                var progress = 0;
                var interval = setInterval(function () {
                    progress = Math.min(progress + Math.random() * 0.1, 1);
                    instance.setProgress(progress);

                    if (progress === 1) {
                        instance.stop();
                        clearInterval(interval);
                    }
                }, 200);
            }
        });
    });

</script>


