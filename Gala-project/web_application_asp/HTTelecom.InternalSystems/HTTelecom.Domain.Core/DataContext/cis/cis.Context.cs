//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HTTelecom.Domain.Core.DataContext.cis
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class CIS_DBEntities : DbContext
    {
        public CIS_DBEntities()
            : base("name=CIS_DBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<AdsCustomer> AdsCustomers { get; set; }
        public DbSet<AdsCustomerCard> AdsCustomerCards { get; set; }
        public DbSet<Bank> Banks { get; set; }
        public DbSet<CardType> CardTypes { get; set; }
        public DbSet<Contract> Contracts { get; set; }
        public DbSet<ContractType> ContractTypes { get; set; }
        public DbSet<CounterCard> CounterCards { get; set; }
        public DbSet<Customer> Customers { get; set; }
        public DbSet<CustomerCard> CustomerCards { get; set; }
        public DbSet<SecureAuthentication> SecureAuthentications { get; set; }
        public DbSet<Vendor> Vendors { get; set; }
        public DbSet<VendorAddress> VendorAddresses { get; set; }
        public DbSet<VendorCard> VendorCards { get; set; }
        public DbSet<Wishlist> Wishlists { get; set; }
        public DbSet<MailTemplate> MailTemplate { get; set; }
    
        public virtual ObjectResult<usp_GetAdsCustomerBySearch_Result> usp_GetAdsCustomerBySearch(Nullable<int> searchCase, string inputText)
        {
            var searchCaseParameter = searchCase.HasValue ?
                new ObjectParameter("searchCase", searchCase) :
                new ObjectParameter("searchCase", typeof(int));
    
            var inputTextParameter = inputText != null ?
                new ObjectParameter("inputText", inputText) :
                new ObjectParameter("inputText", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetAdsCustomerBySearch_Result>("usp_GetAdsCustomerBySearch", searchCaseParameter, inputTextParameter);
        }
    
        public virtual ObjectResult<usp_GetCustomerBySearch_Result> usp_GetCustomerBySearch(Nullable<int> searchCase, string inputText)
        {
            var searchCaseParameter = searchCase.HasValue ?
                new ObjectParameter("searchCase", searchCase) :
                new ObjectParameter("searchCase", typeof(int));
    
            var inputTextParameter = inputText != null ?
                new ObjectParameter("inputText", inputText) :
                new ObjectParameter("inputText", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetCustomerBySearch_Result>("usp_GetCustomerBySearch", searchCaseParameter, inputTextParameter);
        }
    
        public virtual ObjectResult<usp_GetListGroupProduct_Result> usp_GetListGroupProduct()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetListGroupProduct_Result>("usp_GetListGroupProduct");
        }
    
        public virtual ObjectResult<usp_GetVendorCardBySearch_Result> usp_GetVendorCardBySearch(Nullable<int> searchCase, string inputText)
        {
            var searchCaseParameter = searchCase.HasValue ?
                new ObjectParameter("searchCase", searchCase) :
                new ObjectParameter("searchCase", typeof(int));
    
            var inputTextParameter = inputText != null ?
                new ObjectParameter("inputText", inputText) :
                new ObjectParameter("inputText", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetVendorCardBySearch_Result>("usp_GetVendorCardBySearch", searchCaseParameter, inputTextParameter);
        }
    
        public virtual int usp_UpdateIsDeleteCustomerCardByCustomer(Nullable<long> customerId, Nullable<bool> isDeleted)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("customerId", customerId) :
                new ObjectParameter("customerId", typeof(long));
    
            var isDeletedParameter = isDeleted.HasValue ?
                new ObjectParameter("isDeleted", isDeleted) :
                new ObjectParameter("isDeleted", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UpdateIsDeleteCustomerCardByCustomer", customerIdParameter, isDeletedParameter);
        }
    
        public virtual int usp_UpdateIsDeleteWishlistByCustomer(Nullable<long> customerId, Nullable<bool> isDeleted)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("customerId", customerId) :
                new ObjectParameter("customerId", typeof(long));
    
            var isDeletedParameter = isDeleted.HasValue ?
                new ObjectParameter("isDeleted", isDeleted) :
                new ObjectParameter("isDeleted", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UpdateIsDeleteWishlistByCustomer", customerIdParameter, isDeletedParameter);
        }
    
        public virtual ObjectResult<spFilterCustomer_Result> spFilterCustomer(string email, string firstName, string lastName, string gender, string phone, string address, string dateOfBirth)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var dateOfBirthParameter = dateOfBirth != null ?
                new ObjectParameter("DateOfBirth", dateOfBirth) :
                new ObjectParameter("DateOfBirth", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spFilterCustomer_Result>("spFilterCustomer", emailParameter, firstNameParameter, lastNameParameter, genderParameter, phoneParameter, addressParameter, dateOfBirthParameter);
        }
    }
}
