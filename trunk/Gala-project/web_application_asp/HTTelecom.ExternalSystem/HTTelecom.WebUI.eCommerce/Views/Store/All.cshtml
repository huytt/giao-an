@using PagedList;
@using PagedList.Mvc;
@{
    var Stores = (IPagedList<HTTelecom.Domain.Core.DataContext.mss.StoreInMedia>)ViewBag.Stores;
    ViewBag.Title = "All";
}

@Html.Hidden("step", 0)

<div class="row user-margin-top-5" id="lsStoreView">
    @*@foreach (var item in Stores)
    {
        var styleCollumn = ViewBag.numColumn == 2 ? "s6" : "s12";
        <div class="col @styleCollumn allStore" style="margin-bottom: 5px;padding:0px 3px 0px 6px;">
            <div class="card margin-0">
                <div class="card-image">
                    <a href="@Url.Action("Index", "Store", new {id=item.Store.StoreId,urlName=item.Store.Alias })">
                        <img class="lazyload user-col-0" data-sizes="auto" data-src="@(HTTelecom.WebUI.eCommerce.Common.HTXoneServer.Connect + item.Media.Url  + item.Media.MediaName)" style="max-height: 100%; max-width: 100%; width: 100%; height: auto;">
                    </a>
                </div>
                <div class="card-action user-padding-0" style="  display: table;width: 100%;height: 33px;overflow: hidden;vertical-align: middle;">
                    <div class="margin-0" style="height: 33px; vertical-align: middle; width: 100%; text-align: center; max-height: 33px; display: table-cell;">
                        <a href="@Url.Action("Index", "Store", new {id=item.Store.StoreId,urlName=item.Store.Alias })" data-element="color" title="@item.Store.StoreName" style="  width: 100%;white-space: normal;margin: 0px;">
                            @item.Store.StoreName
                        </a>
                    </div>
                </div>
            </div>
        </div>
    }*@
    @*<div class="col s12 text-center" id="paginationContainer">
        @Html.PagedListPager(Stores, page => Url.Action("All", "Store", new { page = page, _numColumn = ViewBag.numColumn, _sortBy = ViewBag.sortBy, _order = ViewBag.order }), PagedListRenderOptions.OnlyShowFivePagesAtATime)
    </div>*@
</div>

<div class="preloader-wrapper big active" id="preloadProduct" style="display: none; left: 50%; margin-left: -32px;">
    <div class="spinner-layer spinner-blue-only">
        <div class="circle-clipper left">
            <div class="circle"></div>
        </div><div class="gap-patch">
            <div class="circle"></div>
        </div><div class="circle-clipper right">
            <div class="circle"></div>
        </div>
    </div>
</div>
<!--------------Layout Panel : test-------------->
<div id="pnlStoreFilter">
    <div class="row pnl-content" style="  background: red;">
        <a href="#ViewModeChangePanel" id="changeViewMode" class="col s6 modal-trigger" style="background: red; height: 30px; line-height: 30px; font-size: 12px; text-align: left; color: white; border-right: 1px solid white;" id="btnTest1">
            View Mode
        </a>
        <a href="#SortByModal" id="changeSortBy" class="col s6 modal-trigger" style="background: red; height: 30px; line-height: 30px; font-size: 12px; text-align: left; color: white;" id="btnTest2">
            Sort By
        </a>
    </div>
</div>
<div id="ViewModeChangePanel" class="modal">
    <div class="modal-content">
        <h4>View Mode</h4>
        <div class="row">
            <div class="col m12 s12">
                <button class="btnViewLayout left" id="ListViewMode" data-value="s12" style="height: 31px; line-height: 31px; padding-top: 3px; margin-top: 2px; border: none;">
                    <i class="fa-icon fa-icon-listview-140" style="  margin-top: -4px;"></i>
                </button>
                <div class="left" style="height: 31px; line-height: 31px; padding-left: 10px; margin-top: 2px;">
                    List View
                </div>
            </div>
            <div class="col m6 s12" style="margin-top: 10px;">
                <button class="btnViewLayout left" id="GridViewMode" data-value="s6" style="height: 31px; line-height: 31px; padding-top: 3px; border: none;">
                    <i class="fa-icon fa-icon-gridview-134" style="  margin-top: -4px;"></i>
                </button>
                <div class="left" style="height: 31px; line-height: 31px; padding-left: 10px; margin-top: 2px;">
                    Grid View
                </div>
            </div>
        </div>
    </div>
</div>

<div id="SortByModal" class="modal">
    <div class="modal-content">
        <h4>Sort By</h4>
        <div class="row">
            <div class="col m12 s12">
                <input type="radio" name="sortby" id="rNone" checked value="0">
                <label for="rNone" style="  margin-left: 28px;">
                    None
                </label>
            </div>
            <div class="col m6 s12">
                <input type="radio" name="sortby" id="rName" value="1">
                <label for="rName" style="  margin-left: 28px;">
                    Name
                </label>
            </div>
            <div class="col m12 s12">
                <input type="radio" name="sortby" id="rTime" value="2">
                <label for="rTime" style="  margin-left: 28px;">
                    Time
                </label>
            </div>
        </div>
        <h4>Order</h4>
        <div class="row">
            <div class="col m12 s12">
                <input type="radio" name="Orderby" id="rAscending" checked disabled value="asc">
                <label for="rAscending" style="  margin-left: 28px;">
                    Ascending
                </label>
            </div>
            <div class="col m12 s12">
                <input type="radio" name="Orderby" id="rDescending" disabled value="desc">
                <label for="rDescending" style="  margin-left: 28px;">
                    Descending
                </label>
            </div>
        </div>
    </div>
    <div class="modal-footer">
        <a id="sortByCancel" class=" modal-action waves-effect waves-green btn-flat">
            Cancel
        </a>
        <a id="sortBySubmit" class="modal-action waves-effect waves-green btn-flat">
            OK
        </a>
    </div>
</div>
<style>
    .pagination {
        display: inline-block;
    }

        .pagination li.active {
            background-color: black;
            border-radius: 50%;
        }

        .pagination li a {
            line-height: 1.8;
        }
</style>

@section JavaScript {
    <script type="text/javascript">

        // Get current value from ViewBag.
        var numColumn = parseInt(@ViewBag.numColumn);

        var defaultCount = 6;
        var curStepBackup = -1;
        var curSortByTemp = 0;
        var curOrderTemp = "asc";

        // Init dataParams to get json data by ajax.
        var dataParams = {
            "_step": -1, "_sortBy": parseInt(@ViewBag.sortBy), "_order": '@ViewBag.order', "_curCount": defaultCount
        }

        // Handle change  view mode.
        $(".btnViewLayout").click(function () {
            var vl = $(this).attr("data-value"), lst = $(".allStore");
            lst.removeClass("s12").removeClass("s6").addClass(vl).resize();

            // Replace content ListPager by new _numColumn. 
            if (vl == "s12") {
                // Current not use page.
                //$("#paginationContainer").html('@Html.PagedListPager(Stores, page => Url.Action("All", "Store", new { page = page, _numColumn = 1, _sortBy = ViewBag.sortBy, _order = ViewBag.order }), PagedListRenderOptions.OnlyShowFivePagesAtATime)');
                numColumn = 1;
            } else {
                // Current not use page.
                //$("#paginationContainer").html('@Html.PagedListPager(Stores, page => Url.Action("All", "Store", new { page = page, _numColumn = 2, _sortBy = ViewBag.sortBy, _order = ViewBag.order }), PagedListRenderOptions.OnlyShowFivePagesAtATime)');
                numColumn = 2;
            }

            $("#ViewModeChangePanel").closeModal();
        });

        // Catch event click to load current view mode.
        $("#changeViewMode").click(function () {
            switch (numColumn) {
                case 1:
                    $("#ListViewMode").css('background', '#0A8255');
                    $("#GridViewMode").css('background', 'none');
                    break;
                case 2:
                    $("#ListViewMode").css('background', 'none');
                    $("#GridViewMode").css('background', '#0A8255');
                    break;
            }
        });

        // Catch event click to load current sort by modal.
        $("#changeSortBy").click(function () {
            loadSortBy(dataParams._sortBy);
            loadOrder(dataParams._order);
        });

        function loadSortBy(sortBy) {
            switch (sortBy) {
                case 0:
                    $('#rNone').prop("checked", true);
                    $('#rAscending').attr("disabled", true);
                    $('#rDescending').attr("disabled", true);
                    break;
                case 1:
                    $('#rName').prop("checked", true);
                    $('#rAscending').attr("disabled", false);
                    $('#rDescending').attr("disabled", false);
                    break;
                case 2:
                    $('#rTime').prop("checked", true);
                    $('#rAscending').attr("disabled", false);
                    $('#rDescending').attr("disabled", false);
                    break;
            }
        }

        function loadOrder(order) {
            switch (order) {
                case "asc":
                    $('#rAscending').prop("checked", true);
                    break;
                case "desc":
                    $('#rDescending').prop("checked", true);
                    break;
            }
        }

        // Update value SortByModal
        $('#SortByModal input[name="sortby"]').click(function () {
            curSortByTemp = parseInt(this.value);
            loadSortBy(curSortByTemp);
        });

        $('#SortByModal input[name="Orderby"]').click(function () {
            curOrderTemp = this.value;
        });

        // ===================Handle sort======================
        $('#sortBySubmit').click(function () {
            // Generate link for page. Current not use, change to use ajax.
            @*var url = '@Url.Action("All", "Store", new {page = ViewBag.page, _numColumn = ViewBag.numColumn })' + "&_sortBy=" + _curSortby + "&_order=" + _curOrder;
            window.location.href = url;*@

            // clear all views.
            $('#lsStoreView').html('');
            //console.log("======huytt=====00000=dataParams============", dataParams);
            dataParams._sortBy = curSortByTemp;
            dataParams._order = curOrderTemp;
            //console.log("======huytt====1111==dataParams============", dataParams);
            //Backup current step
            curStepBackup = dataParams._step;

            // Update data with current config and load again.
            dataParams._step = -1;
            $(window).unbind('scroll');
            loadData();

            $("#SortByModal").closeModal();
        });

        $('#sortByCancel').click(function () {
            curSortByTemp = dataParams._sortBy;
            curOrderTemp = dataParams._order;
            $("#SortByModal").closeModal();
            //console.log("======huytt=====00000=curSortByTemp======curOrderTemp======", curSortByTemp, curOrderTemp);
        });

        //=================== Handle load data.=================
        function addStoreView(object) {
            //console.log("======huytt======object id========object name=====", object.StoreId, object.StoreName);
            var item =
            '<div class="col ' + (numColumn == 1? 's12':'s6') + ' allStore" style="margin-bottom: 5px;padding:0px 3px 0px 6px;">'
                + '<div class="card margin-0">'
                    + '<div class="card-image">'
                        + '<a href="' + object.Link + '">'
                            + '<img class="lazyload user-col-0" data-sizes="auto" data-src="' + '@HTTelecom.WebUI.eCommerce.Common.HTXoneServer.Connect' + object.Url + object.MediaName + '" style="max-height: 100%; max-width: 100%; width: 100%; height: auto;">'
                        + '</a>'
                    + '</div>'
                    + '<div class="card-action user-padding-0" style="  display: table;width: 100%;height: 33px;overflow: hidden;vertical-align: middle;">'
                        + '<div class="margin-0" style="height: 33px; vertical-align: middle; width: 100%; text-align: center; max-height: 33px; display: table-cell;">'
                            + '<a href="' + object.Link + '" data-element="color" title="' + object.StoreName + '" style="  width: 100%;white-space: normal;margin: 0px;">'
                                + object.StoreName
                            + '</a>'
                        + '</div>'
                    + '</div>'
                + '</div>'
            + '</div>';

            $('#lsStoreView').append(item);
        }

        function addStoreViews(lstobject) {
            for (var i = 0; i < lstobject.length; i++) {
                addStoreView(lstobject[i]);
            }
        }

        function loadData() {
            //console.log("======huytt==dataParams======curStepBackup=====", dataParams, curStepBackup);
            $.ajax({
                type: "POST",
                url: '@Url.Action("GetStore", "Particle")',
                data: dataParams,
                cache: false,
                dataType: "json",
                success: function (dt) {
                    if (dt.ListStoreObject.length > 0) {
                        addStoreViews(dt.ListStoreObject);
                        if (dataParams._step != -1) {
                            dataParams._curCount += dt.ListStoreObject.length;
                            //console.log("====huytt====_curCount======", dataParams._curCount);
                        }
                        if (curStepBackup > -1) {
                            dataParams._step = curStepBackup;
                            curStepBackup = -1;
                        } else {
                            dataParams._step++;
                        }
                        $(window).bind('scroll', bindScroll);
                    } else {
                        $(window).unbind('scroll');
                        $("#preloadProduct").css('display', 'none');
                    }
                }, error: function (error) {
                    console.log(error);
                    $(window).unbind('scroll');
                    $("#preloadProduct").css('display', 'none');
                }
            });
        };

        // ============== Catch event scroll to call load data ======================
        function bindScroll() {
            if ($(window).scrollTop() + $(window).height() > $(document).height() - $(".page-footer").height() + 30) {
                $("#preloadProduct").css('display', 'block');
                $(window).unbind('scroll');
                loadData();
            }
        };

        $(window).scroll(bindScroll);

        // ============== Load data the first time======================
        $(window).load(function () {
            // Load data first time.
            $(window).unbind('scroll');
            loadData();
        });

    </script>
}
