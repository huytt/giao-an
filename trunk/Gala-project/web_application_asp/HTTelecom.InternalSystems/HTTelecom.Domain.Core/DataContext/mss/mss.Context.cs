//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HTTelecom.Domain.Core.DataContext.mss
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class MSS_DBEntities : DbContext
    {
        public MSS_DBEntities()
            : base("name=MSS_DBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<AlertMessage> AlertMessage { get; set; }
        public DbSet<Article> Article { get; set; }
        public DbSet<ArticleType> ArticleType { get; set; }
        public DbSet<Brand> Brand { get; set; }
        public DbSet<Category> Category { get; set; }
        public DbSet<Category_MultiLang> Category_MultiLang { get; set; }
        public DbSet<Gift> Gift { get; set; }
        public DbSet<GroupPriority> GroupPriority { get; set; }
        public DbSet<Media> Media { get; set; }
        public DbSet<MediaType> MediaType { get; set; }
        public DbSet<Product> Product { get; set; }
        public DbSet<ProductInCategory> ProductInCategory { get; set; }
        public DbSet<ProductInMedia> ProductInMedia { get; set; }
        public DbSet<ProductInPriority> ProductInPriority { get; set; }
        public DbSet<ProductStatus> ProductStatus { get; set; }
        public DbSet<ProductType> ProductType { get; set; }
        public DbSet<Review> Review { get; set; }
        public DbSet<SearchKeyword> SearchKeyword { get; set; }
        public DbSet<Size> Size { get; set; }
        public DbSet<SizeGlobal> SizeGlobal { get; set; }
        public DbSet<Store> Store { get; set; }
        public DbSet<StoreInMedia> StoreInMedia { get; set; }
    
        public virtual ObjectResult<Product> SearchProductSimple(string keyword)
        {
            var keywordParameter = keyword != null ?
                new ObjectParameter("keyword", keyword) :
                new ObjectParameter("keyword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Product>("SearchProductSimple", keywordParameter);
        }
    
        public virtual ObjectResult<Product> SearchProductSimple(string keyword, MergeOption mergeOption)
        {
            var keywordParameter = keyword != null ?
                new ObjectParameter("keyword", keyword) :
                new ObjectParameter("keyword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Product>("SearchProductSimple", mergeOption, keywordParameter);
        }
    
        public virtual ObjectResult<Store> SearchStoreSimple(string keyword)
        {
            var keywordParameter = keyword != null ?
                new ObjectParameter("keyword", keyword) :
                new ObjectParameter("keyword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Store>("SearchStoreSimple", keywordParameter);
        }
    
        public virtual ObjectResult<Store> SearchStoreSimple(string keyword, MergeOption mergeOption)
        {
            var keywordParameter = keyword != null ?
                new ObjectParameter("keyword", keyword) :
                new ObjectParameter("keyword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Store>("SearchStoreSimple", mergeOption, keywordParameter);
        }
    
        public virtual ObjectResult<spSearchProductPriority_Result> spSearchProductPriority(string keyword, Nullable<long> brandId, string category)
        {
            var keywordParameter = keyword != null ?
                new ObjectParameter("keyword", keyword) :
                new ObjectParameter("keyword", typeof(string));
    
            var brandIdParameter = brandId.HasValue ?
                new ObjectParameter("BrandId", brandId) :
                new ObjectParameter("BrandId", typeof(long));
    
            var categoryParameter = category != null ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSearchProductPriority_Result>("spSearchProductPriority", keywordParameter, brandIdParameter, categoryParameter);
        }
    
        public virtual ObjectResult<spSearchStorePriority_Result> spSearchStorePriority(string keyword)
        {
            var keywordParameter = keyword != null ?
                new ObjectParameter("keyword", keyword) :
                new ObjectParameter("keyword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSearchStorePriority_Result>("spSearchStorePriority", keywordParameter);
        }
    }
}
